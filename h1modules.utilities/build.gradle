plugins {
    id 'java'
    id 'application'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation libs.eclipse.jgit
    implementation libs.eclipse.jdt.launching
    if(System.getProperty("os.name").toLowerCase().contains("win")) {
        implementation (libs.eclipse.swt.win32) {
            transitive = false
        }
    }else {
        implementation (libs.eclipse.swt.linux) {
            transitive = false
        }
    }
    implementation (libs.eclipse.jface) {
        transitive = false
    }
    implementation (libs.eclipse.ui.workbench) {
        transitive = false
    }
    implementation(libs.eclipse.ui.console) {
        transitive = false
    }
    implementation libs.gson
    implementation libs.guava
    implementation libs.httpclient
    implementation libs.commons.io
}

sourceSets {
    main {
        java {
            srcDir 'src'
        }
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    mainClass = 'net.sf.ecl1.utilities.preferences.standalone.PreferencesApp'
}

tasks.register("runSymlinkCreator", JavaExec) {
    description = "Creates a symlink to a given path in the workspace folder."
    group = "util"
    mainClass.set("net.sf.ecl1.utilities.standalone.SymlinkCreator")
    classpath = sourceSets.main.runtimeClasspath

    println "symlinkTarget: ${project.hasProperty('symlinkTarget') ? project.symlinkTarget : 'not set'}"

    args project.hasProperty('symlinkTarget') ? project.symlinkTarget.split(',') : []
}

tasks.register("addWebappsSymlink", JavaExec) {
    description = "Creates a symlink to Webapps in the workspace folder."
    group = "util"
    mainClass.set("net.sf.ecl1.utilities.standalone.SymlinkCreator")
    classpath = sourceSets.main.runtimeClasspath
    args = ['../webapps']
}

tasks.register('copyVSCodeTasks', JavaExec) {
    description = "Copy tasks.json into VSCode workspace."
    group = "util"
    mainClass.set("net.sf.ecl1.utilities.standalone.vscode.CopyTasks")
    classpath = sourceSets.main.runtimeClasspath
}

tasks.register('toggleVSCodeEcl1Visibility', JavaExec) {
    description = "Toggle ecl1 visibility in VSCode workspace."
    group = "util"
    mainClass.set("net.sf.ecl1.utilities.standalone.vscode.ToggleEcl1VisibilityInWorkspace")
    classpath = sourceSets.main.runtimeClasspath
}
